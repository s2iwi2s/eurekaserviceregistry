application.version: 1.0B

#spring.info:
#  profile: ${spring.profiles.active}
#  version: ${version}
#  git:
#    version: ${git.commit.id.describe:}
#    commit: ${git.commit.id.abbrev:}
#    branch: ${git.branch:}
app:
  login:
    eureka:
      username: EUREKA
      password: EUREKA_ADMIN
    admin:
      username: admin
      password: admin

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  show-spring-cloud-functions: true
  show-actuator: false
  api-docs.groups.enabled: true

spring:
  application:
    name: eurekaserviceregistry
    instance-id: ${spring.application.name}:${random.uuid}
    admin.enabled: true
#  config.import: "optional:configserver:"
  jackson:
    serialization:
      indent-output: true
  security:
    user:
      name: ${app.login.admin.username}
      password: ${app.login.admin.password}
  output.ansi.enabled: always

spring.boot.admin:
  context-path: /
  discovery.enabled: true
  client:
    instance:
      name: ${spring.application.name}-monitor
      metadata:
        user.name: ${spring.security.user.name}
        user.password: ${spring.security.user.password}
    username: ${spring.security.user.name}
    password: ${spring.security.user.password}
  ui:
    enable-toasts: true
    title: Application Monitor
    brand: "<span>Application Monitor</span>"
    theme:
      background-enabled: false
      color: #42d3a5

eureka:
  dashboard.path: /admin/eureka
  instance:
    health-check-url-path: /actuator/health
    instance-id: ${spring.application.name}:${random.uuid}
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 5
    prefer-ip-address: true
    metadata-map:
      startup: ${random.int}
      zone: primary # This is needed for the load balancer
  client:
    enabled: true
    fetch-registry: true
    register-with-eureka: false
    initial-instance-info-replication-interval-seconds: 5
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
    healthcheck.enabled: true
    server.waitTimeInMsWhenSyncEmpty: 0

management:
  info:
    env.enabled: true
    git:
      mode: full
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
    env:
      keys-to-sanitize: password,secret
      show-values: WHEN_AUTHORIZED
    configprops:
      show-values: WHEN_AUTHORIZED
  endpoint:
    enabled-by-default: true
    refresh.enabled: true
    restart.enabled: false
    shutdown.enabled: true
    info:
      enabled: true
      show-values: WHEN_AUTHORIZED
    env:
      keys-to-sanitize: password,secret
      show-values: WHEN_AUTHORIZED
      post.enabled: true
    health.show-details: WHEN_AUTHORIZED
    configprops.show-values: WHEN_AUTHORIZED


#  spring.boot.admin.client.url=http://localhost:8080
#  management.endpoints.web.exposure.include=*
#  management.info.env.enabled: true

logging:
  pattern:
    console: "%black(%d{ISO8601}) %highlight(%-5level) %yellow(%c{2}): %highlight(%msg%n%throwable)"
#    console: "%black(%d{ISO8601}) %highlight(%-5level) [%thread] %logger{0} %yellow(%c{2}): %msg%n%throwable"
#    file: "%black(%d{ISO8601}) %highlight(%-5level) %yellow(%c{2}): %msg%n%throwable"
#    file: "%black(%d{ISO8601}) %highlight(%-5level) %yellow(%C{1}): %msg%n%throwable"
#    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
#    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
#    file: "%d %-5level %C{1}: %msg%n"
